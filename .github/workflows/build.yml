# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build Projects

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:

  # build-vfile:
  #   runs-on: ubuntu-latest
  #   name: Build VisionerFile

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: ðŸ¤– Install OpenCV
  #     run: sudo apt-get install libopencv-dev libopencv-contrib-dev -y 

  #   - name: ðŸ”§ Configure CMake
  #     run: cmake -B ${{github.workspace}}/build -S${{github.workspace}}/src/VisionerFile -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

  #   - name: ðŸ”¨ Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  # build-vwebcam:
  #   runs-on: ubuntu-latest
  #   name: Build VisionerWebcam

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: ðŸ¤– Install OpenCV
  #     run: sudo apt-get install libopencv-dev libopencv-contrib-dev -y 

  #   - name: ðŸ”§ Configure CMake
  #     run: cmake -B ${{github.workspace}}/build -S${{github.workspace}}/src/VisionerWebcam -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

  #   - name: ðŸ”¨ Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build-vremotion:
    runs-on: ubuntu-latest
    name: Build VisioneREmotion

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: ðŸ¤– Install OpenCV
      run: sudo apt-get install libopencv-dev libopencv-contrib-dev -y 

    - name: ðŸ”§ Configure CMake
      run: cmake -B ${{github.workspace}}/build -S${{github.workspace}}/src/VisioneREmotion -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: ðŸ”¨ Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
