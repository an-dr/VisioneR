{
    "folders": [
        {
            "path": "."
        }
    ],
    "settings": {
        "C_Cpp.default.compileCommands": "${workspaceFolder}/build/compile_commands.json",
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            //debug
            {
                "name": "Debug - VisionerFile",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/install/VisionerFile",
                "miDebuggerPath": "gdb",
                "args": [],
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}/install",
                "preLaunchTask": "Install",
                "setupCommands": [
                    { // Display content in STL containers pretty
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ],
                "environment": [
                    {
                        "name": "GTK_PATH",
                        "value": ""
                    }
                ]
            },
            {
                "name": "Debug - VisioneREmotion",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/install/VisioneREmotion",
                "miDebuggerPath": "gdb",
                "args": [],
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}/install",
                "preLaunchTask": "Install",
                "setupCommands": [
                    { // Display content in STL containers pretty
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ],
                "environment": [
                    {
                        "name": "GTK_PATH",
                        "value": ""
                    }
                ]
            },
            {
                "name": "Debug - VisionerWebcam",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/install/VisionerWebcam",
                "miDebuggerPath": "gdb",
                "args": [],
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}/install",
                "preLaunchTask": "Install",
                "setupCommands": [
                    { // Display content in STL containers pretty
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ],
                "environment": [
                    {
                        "name": "GTK_PATH",
                        "value": ""
                    }
                ]
            }
        ],
        "compounds": []
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            // Cmake build
            {
                "label": "Build",
                "type": "shell",
                "command": "cmake",
                "args": [
                    "--build",
                    "${workspaceFolder}/build"
                ],
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "options": {
                    "cwd": "${input:Project}"
                },
                "problemMatcher": [],
                "dependsOn": "Configure"
            },
            // Cmake build
            {
                "label": "Configure",
                "type": "shell",
                "command": "cmake",
                "args": [
                    "-G",
                    "Ninja",
                    "-B",
                    "${workspaceFolder}/build",
                    "-DCMAKE_BUILD_TYPE=Debug"
                ],
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "options": {
                    "cwd": "${input:Project}"
                },
                "problemMatcher": []
            },
            // Cmake clean
            {
                "label": "Clean",
                "type": "shell",
                "command": "cmake",
                "args": [
                    "--build",
                    "${workspaceFolder}/build",
                    "--target",
                    "clean"
                ],
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "options": {
                    "cwd": "${input:Project}"
                },
                "problemMatcher": []
            },
            // Install to workspace/install
            {
                "label": "Install",
                "type": "shell",
                "command": "cmake",
                "args": [
                    "--install",
                    "${workspaceFolder}/build",
                    "--prefix",
                    "${workspaceFolder}/install"
                ],
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "options": {
                    "cwd": "${input:Project}"
                },
                "problemMatcher": [],
                "dependsOn": "Build"
            }
        ],
        "inputs": [{
            "type": "pickString",
            "id": "Project",
            "description": "Select project",
            "default": "VisionerFile",
            "options": [
                {
                    "value": "src/VisionerFile",
                    "label": "VisionerFile",
                },
                {
                    "value": "src/VisionerWebcam",
                    "label": "VisionerWebcam"
                },
                {
                    "value": "src/VisioneREmotion",
                    "label": "VisioneREmotion"
                }
            ]
        }]
    }
}
